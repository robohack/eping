	@(#)RELEASE_NOTES       e07@nikhef.nl (Eric Wassenaar) 950930

yymmdd		Description of changes per release
CHANGES		Changes with respect to original utility
TODO		Things that still need to be done
WISHLIST	Wishes expressed by various people

# ----------------------------------------------------------------------
# Description of changes per release
# ----------------------------------------------------------------------

950930
	Avoid potential alignment conflicts.
		Allocate socket addresses of type struct sockaddr_in
		instead of type struct sockaddr. The first one has
		stricter alignment restrictions, although they have
		the same size.
		There are no functional changes in this release.

950918
	Disable all reverse DNS lookups in numeric mode.
		The -n flag now also prevents a reverse lookup of a
		numeric dotted quad address given on the command line.
		This avoids a potential annoying nameserver timeout.

950910
	Enhance error reporting.
		Keep track of ICMP messages that explicitly reject our
		ping requests, such as host unreachable and the like.
		They are generated by intermediate hosts in transit.
		Such errors are reported, and statistics accumulated,
		instead of ignoring them and finally timing out.
	More IP packet dump printout.
		In verbose mode, also print ICMP portion of IP packet,
		not only TCP or UDP data.
	Improve robustness.
		Ensure all input packets are of sufficient size before
		processing them. This was silently assumed when dumping
		their contents in verbose mode.

950805
	Recognize new ICMP codes.
		Some new ICMP packet types and ICMP_UNREACH subcodes are
		now detected. The latest codes are defined by RFC 1812.
		Suggested by Steinar Haug <Steinar.Haug@runit.sintef.no>
	Minor changes.
		Change capitalization and text in icmp header printout.

950425
	Multiple address support.
		New option -a to probe all addresses of a multi-homed
		host in succession. Requires some code reshuffling.
		This makes the separate rping utility obsolete.
	Ensure consistent exit code.
		Return success code if any valid response was received,
		and failure code if there were none.
	Save/restore errno across interrupts.
		This is necessary for those system calls which are
		interrupted instead of restarted. It avoids stale
		values in the regular mode code in case of certain
		race conditions.
	Add the RELEASE_NOTES file to explain changes.

940704
	General portability fixes.
		Use predefined constants for fixed size entities.
		Cannot rely on sizeof() for several structs on those
		platforms which don't have 16 or 32 bit integers.
		Adapt checksum algorithm to be more portable.
	Minor changes.
		Release root privileges when they are no longer needed.

940306
	Miscellaneous changes.
		Word-align all 32-bit addresses in IP options buffer.
		Check class D (multicast) and class E (reserved) address.
	Broadcast improvements.
		Keep track of different host responses in broadcast mode.

940226
	Loose source route support.
		New option -L to enable loose source route mode.
		Recognize option -l for compatibility with SUN ping.
	Generalize ip options processing.
		Restrict simultaneous use of more than one IP routing
		option, unless allowed via an explicit compile switch.
	Broadcast support.
		Implement special processing for broadcast pings.
		Restrict options if a broadcast address is specified.
	Quick ping.
		New option -Q for quick ping without statistics.
	Minor enhancements.
		Make messages during verbose packet reporting uniform.
		Properly pluralize words in output messages.
	Manual page revised and adapted to new features.

940217
	Complete overhaul of entire code. Various bugs fixed.
		General portability hooks for various platforms.
		Improved error reporting and timeout handling.
		Corrected output print format depending on options.
		Properly schedule next event in various modes.
		More robust code in several places.
	Redesign flow control to properly handle flood mode.
		This ensures that packet loss figures are now reliable.
	New option.
		Undocumented option -T to set timeout in flood mode.

940212
	Portability changes.
		Use setvbuf() if setlinebuf() is unavailable.
	Minor enhancements.
		Use float format to print percentage packet loss.
		Suppress output in quiet flood mode.
		Miscellaneous lint cleanup.
	Various bug fixes.
		Save hostname properly in sufficient static storage.
		Correct checksum algorithm for odd bytecount.

910926
	Minor bug fix.
		getopt() returns int instead of char.
	Hack for special ethernet interface.
		Put omninet (NC400) controller in promiscuous mode.
		This is necessary for record route mode to work.

# ----------------------------------------------------------------------
# CHANGES
# ----------------------------------------------------------------------

Bugs fixed

	Checksum algorithm.
		The ICMP packet checksum was computed incorrectly
		in case the packet contained an odd number of bytes.
	Hostname storage.
		The hostname as returned via gethostby{name,addr} was
		pointing to internal storage which would be clobbered
		by subsequent calls. Furthermore, MAXHOSTNAMELEN is
		not sufficient to store fully qualified domain names.
	Response printout.
		The printing of the response messages was not always
		according to the specified options.
	Event scheduling.
		The scheduling of new events and termination was not
		always properly corresponding to the specified options.
	Packet loss report.
		Packet loss is now properly reported. Especially when
		running in flood mode the figures were bogus.

New features

	Internal redesign.
		Necessary to properly handle flood mode and broadcast.
	Portability hooks.
		New Makefile and header files to ease installation on
		various platforms.
	Loose source route.
		Can be specified instead of, or in combination with,
		record route. Handling of IP options is generalized.
		See conf.h for potential conflicts with record route.
	Broadcast support.
		Added hooks to handle broadcast address in all modes.
		Restrict the use of flood ping to the superuser when
		a broadcast address is specified.
	Quick ping.
		Suppresses all output and quits when target is alive.
	Ping all addresses.
		Probe all addresses of a multi-homed destination host.
	Recognize new ICMP codes.
		New types and subcodes have been defined recently.
	Improve robustness.
		Don't assume that all input packets are of sufficient
		size when decoding their contents.
	Enhance error handling.
		Recognize and act upon ICMP bounce messages and report
		error conditions.

# ----------------------------------------------------------------------
# TODO
# ----------------------------------------------------------------------

# ----------------------------------------------------------------------
# WISHLIST
# ----------------------------------------------------------------------
